// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/CSUOS/rabums/ent/clientserver"
	"github.com/CSUOS/rabums/ent/event"
	"github.com/CSUOS/rabums/ent/schema"
	"github.com/CSUOS/rabums/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	clientserverFields := schema.ClientServer{}.Fields()
	_ = clientserverFields
	// clientserverDescCreatedAt is the schema descriptor for created_at field.
	clientserverDescCreatedAt := clientserverFields[5].Descriptor()
	// clientserver.DefaultCreatedAt holds the default value on creation for the created_at field.
	clientserver.DefaultCreatedAt = clientserverDescCreatedAt.Default.(func() time.Time)
	eventFields := schema.Event{}.Fields()
	_ = eventFields
	// eventDescMessage is the schema descriptor for message field.
	eventDescMessage := eventFields[1].Descriptor()
	// event.DefaultMessage holds the default value on creation for the message field.
	event.DefaultMessage = eventDescMessage.Default.(string)
	// eventDescCreatedAt is the schema descriptor for created_at field.
	eventDescCreatedAt := eventFields[2].Descriptor()
	// event.DefaultCreatedAt holds the default value on creation for the created_at field.
	event.DefaultCreatedAt = eventDescCreatedAt.Default.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[5].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
}
